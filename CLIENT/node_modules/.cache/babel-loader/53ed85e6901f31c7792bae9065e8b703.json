{"ast":null,"code":"/**\n * [Chart.PieceLabel.js]{@link https://github.com/emn178/Chart.PieceLabel.js}\n *\n * @version 0.15.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2017-2018\n * @license MIT\n */\n(function () {\n  if (typeof Chart === 'undefined') {\n    console.warn('Can not find Chart object.');\n    return;\n  }\n\n  if (!Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  function PieceLabel() {\n    this.drawDataset = this.drawDataset.bind(this);\n  }\n\n  PieceLabel.prototype.beforeDatasetsUpdate = function (chartInstance, index) {\n    this.parseOptions(chartInstance, index);\n\n    if (this.position === 'outside') {\n      var padding = this.fontSize * 1.5 + this.outsidePadding;\n      chartInstance.chartArea.top += padding;\n      chartInstance.chartArea.bottom -= padding;\n    }\n  };\n\n  PieceLabel.prototype.afterDatasetsDraw = function (chartInstance, index) {\n    this.parseOptions(chartInstance, index);\n    this.labelBounds = [];\n    chartInstance.config.data.datasets.forEach(this.drawDataset);\n  };\n\n  PieceLabel.prototype.drawDataset = function (dataset) {\n    var ctx = this.ctx;\n    var chartInstance = this.chartInstance;\n\n    var meta = dataset._meta[Object.keys(dataset._meta)[0]];\n\n    this.totalPercentage = 0;\n    this.total = null;\n\n    for (var i = 0; i < meta.data.length; i++) {\n      var element = meta.data[i],\n          view = element._view,\n          text;\n\n      if (!this.shouldRenderData(view)) {\n        continue;\n      }\n\n      switch (this.render) {\n        case 'value':\n          var value = dataset.data[i];\n\n          if (this.format) {\n            value = this.format(value);\n          }\n\n          text = value.toString();\n          break;\n\n        case 'label':\n          text = chartInstance.config.data.labels[i];\n          break;\n\n        case 'image':\n          text = this.images[i] ? this.loadImage(this.images[i]) : '';\n          break;\n\n        case 'percentage':\n        default:\n          percentage = this.getPercentage(view, dataset, i);\n          text = percentage + '%';\n          break;\n      }\n\n      if (typeof this.render === 'function') {\n        text = this.render({\n          label: chartInstance.config.data.labels[i],\n          value: dataset.data[i],\n          percentage: percentage,\n          dataset: dataset,\n          index: i\n        });\n\n        if (text === null || text === undefined) {\n          text = '';\n        } else if (typeof text === 'object') {\n          text = this.loadImage(text);\n        } else {\n          text = text.toString();\n        }\n      }\n\n      if (!text) {\n        continue;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.font = Chart.helpers.fontString(this.fontSize, this.fontStyle, this.fontFamily);\n      var position,\n          innerRadius,\n          arcOffset = 0;\n\n      if (this.position === 'outside' || this.position === 'border') {\n        innerRadius = view.outerRadius / 2;\n        var rangeFromCentre,\n            offset = this.fontSize + this.textMargin,\n            centreAngle = view.startAngle + (view.endAngle - view.startAngle) / 2;\n\n        if (this.position === 'border') {\n          rangeFromCentre = (view.outerRadius - innerRadius) / 2 + innerRadius;\n        } else if (this.position === 'outside') {\n          if (!this.arc) {\n            offset = this.textMargin;\n          }\n\n          rangeFromCentre = view.outerRadius - innerRadius + innerRadius + offset;\n        }\n\n        position = {\n          x: view.x + Math.cos(centreAngle) * rangeFromCentre,\n          y: view.y + Math.sin(centreAngle) * rangeFromCentre\n        };\n\n        if (this.position === 'outside') {\n          if (!this.arc) {\n            offset += this.measureText(text).width / 2;\n          }\n\n          if (position.x < view.x) {\n            position.x -= offset;\n          } else {\n            position.x += offset;\n          }\n\n          arcOffset = view.outerRadius + offset;\n        }\n      } else {\n        innerRadius = view.innerRadius;\n        position = element.tooltipPosition();\n      }\n\n      var fontColor = this.fontColor;\n\n      if (typeof fontColor === 'function') {\n        fontColor = fontColor({\n          label: chartInstance.config.data.labels[i],\n          value: dataset.data[i],\n          percentage: percentage,\n          text: text,\n          backgroundColor: dataset.backgroundColor[i],\n          dataset: dataset,\n          index: i\n        });\n      } else if (typeof fontColor !== 'string') {\n        fontColor = fontColor[i] || this.options.defaultFontColor;\n      }\n\n      if (this.arc) {\n        if (!arcOffset) {\n          arcOffset = (innerRadius + view.outerRadius) / 2;\n        }\n\n        ctx.fillStyle = fontColor;\n        ctx.textBaseline = 'middle';\n        this.drawArcText(text, arcOffset, view, this.overlap);\n      } else {\n        var drawable,\n            mertrics = this.measureText(text),\n            left = position.x - mertrics.width / 2,\n            right = position.x + mertrics.width / 2,\n            top = position.y - mertrics.height / 2,\n            bottom = position.y + mertrics.height / 2;\n\n        if (this.overlap) {\n          drawable = true;\n        } else if (this.position === 'outside') {\n          drawable = this.checkTextBound(left, right, top, bottom);\n        } else {\n          drawable = element.inRange(left, top) && element.inRange(left, bottom) && element.inRange(right, top) && element.inRange(right, bottom);\n        }\n\n        if (drawable) {\n          this.fillText(text, position, fontColor);\n        }\n      }\n\n      ctx.restore();\n    }\n  };\n\n  PieceLabel.prototype.shouldRenderData = function (view) {\n    //Skips label creation if value is zero and showZero is set\n    return this.chartInstance.config.type === 'polarArea' ? view.outerRadius !== 0 : view.circumference !== 0 || this.showZero;\n  };\n\n  PieceLabel.prototype.getPercentage = function (view, dataset, index) {\n    var percentage;\n\n    if (this.chartInstance.config.type === 'polarArea') {\n      if (this.total === null) {\n        this.total = 0;\n\n        for (var i = 0; i < dataset.data.length; ++i) {\n          this.total += dataset.data[i];\n        }\n      }\n\n      percentage = dataset.data[index] / this.total * 100;\n    } else {\n      percentage = view.circumference / this.options.circumference * 100;\n    }\n\n    percentage = parseFloat(percentage.toFixed(this.precision));\n\n    if (!this.showActualPercentages) {\n      this.totalPercentage += percentage;\n\n      if (this.totalPercentage > 100) {\n        percentage -= this.totalPercentage - 100; // After adjusting the percentage, need to trim the numbers after decimal points again, otherwise it may not show\n        // on chart due to very long number after decimal point.\n\n        percentage = parseFloat(percentage.toFixed(this.precision));\n      }\n    }\n\n    return percentage;\n  };\n\n  PieceLabel.prototype.parseOptions = function (chartInstance, index) {\n    var pieceLabel = chartInstance.options.pieceLabel;\n\n    if (Array.isArray(pieceLabel)) {\n      pieceLabel = pieceLabel[index];\n    }\n\n    this.chartInstance = chartInstance;\n    this.ctx = chartInstance.chart.ctx;\n    this.options = chartInstance.config.options;\n    this.render = pieceLabel.render || pieceLabel.mode;\n    this.position = pieceLabel.position || 'default';\n    this.arc = pieceLabel.arc;\n    this.format = pieceLabel.format;\n    this.precision = pieceLabel.precision || 0;\n    this.fontSize = pieceLabel.fontSize || this.options.defaultFontSize;\n    this.fontColor = pieceLabel.fontColor || this.options.defaultFontColor;\n    this.fontStyle = pieceLabel.fontStyle || this.options.defaultFontStyle;\n    this.fontFamily = pieceLabel.fontFamily || this.options.defaultFontFamily;\n    this.shadowOffsetX = pieceLabel.shadowOffsetX || 3;\n    this.shadowOffsetY = pieceLabel.shadowOffsetY || 3;\n    this.shadowColor = pieceLabel.shadowColor || 'rgba(0,0,0,0.3)';\n    this.shadowBlur = pieceLabel.shadowBlur || 6;\n    this.textShadow = pieceLabel.textShadow || false;\n    this.hasTooltip = chartInstance.tooltip._active && chartInstance.tooltip._active.length;\n    this.showZero = pieceLabel.showZero;\n    this.overlap = pieceLabel.overlap;\n    this.images = pieceLabel.images || [];\n    this.outsidePadding = pieceLabel.outsidePadding || 2;\n    this.textMargin = pieceLabel.textMargin || 2;\n    this.showActualPercentages = pieceLabel.showActualPercentages || false;\n  };\n\n  PieceLabel.prototype.checkTextBound = function (left, right, top, bottom) {\n    var labelBounds = this.labelBounds;\n\n    for (var i = 0; i < labelBounds.length; ++i) {\n      var bound = labelBounds[i];\n      var potins = [[left, top], [left, bottom], [right, top], [right, bottom]];\n\n      for (var j = 0; j < potins.length; ++j) {\n        var x = potins[j][0];\n        var y = potins[j][1];\n\n        if (x >= bound.left && x <= bound.right && y >= bound.top && y <= bound.bottom) {\n          return false;\n        }\n      }\n\n      potins = [[bound.left, bound.top], [bound.left, bound.bottom], [bound.right, bound.top], [bound.right, bound.bottom]];\n\n      for (var j = 0; j < potins.length; ++j) {\n        var x = potins[j][0];\n        var y = potins[j][1];\n\n        if (x >= left && x <= right && y >= top && y <= bottom) {\n          return false;\n        }\n      }\n    }\n\n    labelBounds.push({\n      left: left,\n      right: right,\n      top: top,\n      bottom: bottom\n    });\n    return true;\n  };\n\n  PieceLabel.prototype.measureText = function (text) {\n    if (typeof text === 'object') {\n      return {\n        width: text.width,\n        height: text.height\n      };\n    } else {\n      var width = 0;\n      var lines = text.split('\\n');\n\n      for (var i = 0; i < lines.length; ++i) {\n        var result = this.ctx.measureText(lines[i]);\n\n        if (result.width > width) {\n          width = result.width;\n        }\n      }\n\n      return {\n        width: width,\n        height: this.fontSize * lines.length\n      };\n    }\n  };\n\n  PieceLabel.prototype.fillText = function (text, position, fontColor) {\n    var ctx = this.ctx;\n\n    if (typeof text === 'object') {\n      ctx.drawImage(text, position.x - text.width / 2, position.y - text.height / 2, text.width, text.height);\n    } else {\n      ctx.save();\n      ctx.fillStyle = fontColor;\n      ctx.textBaseline = 'top';\n      ctx.textAlign = 'center';\n\n      if (this.textShadow) {\n        ctx.shadowOffsetX = this.shadowOffsetX;\n        ctx.shadowOffsetY = this.shadowOffsetY;\n        ctx.shadowColor = this.shadowColor;\n        ctx.shadowBlur = this.shadowBlur;\n      }\n\n      var lines = text.split('\\n');\n\n      for (var i = 0; i < lines.length; i++) {\n        var y = position.y - this.fontSize / 2 * lines.length + this.fontSize * i;\n        ctx.fillText(lines[i], position.x, y);\n      }\n\n      ctx.restore();\n    }\n  };\n\n  PieceLabel.prototype.loadImage = function (obj) {\n    var image = new Image();\n    image.src = obj.src;\n    image.width = obj.width;\n    image.height = obj.height;\n    return image;\n  };\n\n  PieceLabel.prototype.drawArcText = function (str, radius, view, overlap) {\n    var ctx = this.ctx,\n        centerX = view.x,\n        centerY = view.y,\n        startAngle = view.startAngle,\n        endAngle = view.endAngle;\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.textAlign = 'left';\n    var angleSize = endAngle - startAngle;\n    startAngle += Math.PI / 2;\n    endAngle += Math.PI / 2;\n    var origStartAngle = startAngle;\n    var mertrics = this.measureText(str);\n    startAngle += (endAngle - (mertrics.width / radius + startAngle)) / 2;\n\n    if (!overlap && endAngle - startAngle > angleSize) {\n      ctx.restore();\n      return;\n    }\n\n    if (typeof str === 'string') {\n      ctx.rotate(startAngle);\n      var lines = str.split('\\n'),\n          max = 0,\n          widths = [],\n          offset = 0;\n\n      if (this.position === 'border') {\n        offset = (lines.length - 1) * this.fontSize / 2;\n      }\n\n      for (var j = 0; j < lines.length; ++j) {\n        var mertrics = ctx.measureText(lines[j]);\n\n        if (mertrics.width > max) {\n          max = mertrics.width;\n        }\n\n        widths.push(mertrics.width);\n      }\n\n      for (var j = 0; j < lines.length; ++j) {\n        var line = lines[j];\n        var y = (lines.length - 1 - j) * -this.fontSize + offset;\n        ctx.save();\n        var padding = (max - widths[j]) / 2;\n        ctx.rotate(padding / radius);\n\n        for (var i = 0; i < line.length; i++) {\n          var char = line.charAt(i);\n          mertrics = ctx.measureText(char);\n          ctx.save();\n          ctx.translate(0, -1 * radius);\n          ctx.fillText(char, 0, y);\n          ctx.restore();\n          ctx.rotate(mertrics.width / radius);\n        }\n\n        ctx.restore();\n      }\n    } else {\n      ctx.rotate((origStartAngle + endAngle) / 2);\n      ctx.translate(0, -1 * radius);\n      this.fillText(str, {\n        x: 0,\n        y: 0\n      });\n    }\n\n    ctx.restore();\n  };\n\n  function init(chartInstance) {\n    if (chartInstance.options.pieceLabel) {\n      var count = 1;\n\n      if (Array.isArray(chartInstance.options.pieceLabel)) {\n        count = chartInstance.options.pieceLabel.length;\n      }\n\n      if (!chartInstance.pieceLabel || count !== chartInstance.pieceLabel.length) {\n        chartInstance.pieceLabel = [];\n\n        for (var i = 0; i < count; ++i) {\n          chartInstance.pieceLabel.push(new PieceLabel());\n        }\n      }\n    } else if (chartInstance.pieceLabel) {\n      delete chartInstance.pieceLabel;\n    }\n\n    return chartInstance.pieceLabel;\n  }\n\n  function execute(chartInstance, method) {\n    if (init(chartInstance)) {\n      for (var i = 0; i < chartInstance.pieceLabel.length; ++i) {\n        chartInstance.pieceLabel[i][method](chartInstance, i);\n      }\n    }\n  }\n\n  Chart.pluginService.register({\n    name: 'PieceLabel',\n    beforeDatasetsUpdate: function beforeDatasetsUpdate(chartInstance) {\n      execute(chartInstance, 'beforeDatasetsUpdate');\n    },\n    afterDatasetsDraw: function afterDatasetsDraw(chartInstance) {\n      execute(chartInstance, 'afterDatasetsDraw');\n    }\n  });\n})();","map":{"version":3,"names":["Chart","console","warn","Array","isArray","obj","Object","prototype","toString","call","PieceLabel","drawDataset","bind","beforeDatasetsUpdate","chartInstance","index","parseOptions","position","padding","fontSize","outsidePadding","chartArea","top","bottom","afterDatasetsDraw","labelBounds","config","data","datasets","forEach","dataset","ctx","meta","_meta","keys","totalPercentage","total","i","length","element","view","_view","text","shouldRenderData","render","value","format","labels","images","loadImage","percentage","getPercentage","label","undefined","save","beginPath","font","helpers","fontString","fontStyle","fontFamily","innerRadius","arcOffset","outerRadius","rangeFromCentre","offset","textMargin","centreAngle","startAngle","endAngle","arc","x","Math","cos","y","sin","measureText","width","tooltipPosition","fontColor","backgroundColor","options","defaultFontColor","fillStyle","textBaseline","drawArcText","overlap","drawable","mertrics","left","right","height","checkTextBound","inRange","fillText","restore","type","circumference","showZero","parseFloat","toFixed","precision","showActualPercentages","pieceLabel","chart","mode","defaultFontSize","defaultFontStyle","defaultFontFamily","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","textShadow","hasTooltip","tooltip","_active","bound","potins","j","push","lines","split","result","drawImage","textAlign","image","Image","src","str","radius","centerX","centerY","translate","angleSize","PI","origStartAngle","rotate","max","widths","line","char","charAt","init","count","execute","method","pluginService","register","name"],"sources":["G:/CURSO HENRRY/PROYECTO FINAL/PF2/FRONT/14/PF-BarberApp/node_modules/chart.piecelabel.js/src/Chart.PieceLabel.js"],"sourcesContent":["/**\n * [Chart.PieceLabel.js]{@link https://github.com/emn178/Chart.PieceLabel.js}\n *\n * @version 0.15.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2017-2018\n * @license MIT\n */\n(function () {\n  if (typeof Chart === 'undefined') {\n    console.warn('Can not find Chart object.');\n    return;\n  }\n\n  if (!Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  function PieceLabel() {\n    this.drawDataset = this.drawDataset.bind(this);\n  }\n\n  PieceLabel.prototype.beforeDatasetsUpdate = function (chartInstance, index) {\n    this.parseOptions(chartInstance, index);\n    if (this.position === 'outside') {\n      var padding = this.fontSize * 1.5 + this.outsidePadding;\n      chartInstance.chartArea.top += padding;\n      chartInstance.chartArea.bottom -= padding;\n    }\n  };\n\n  PieceLabel.prototype.afterDatasetsDraw = function (chartInstance, index) {\n    this.parseOptions(chartInstance, index);\n    this.labelBounds = [];\n    chartInstance.config.data.datasets.forEach(this.drawDataset);\n  };\n\n  PieceLabel.prototype.drawDataset = function (dataset) {\n    var ctx = this.ctx;\n    var chartInstance = this.chartInstance;\n    var meta = dataset._meta[Object.keys(dataset._meta)[0]];\n    this.totalPercentage = 0;\n    this.total = null;\n    for (var i = 0; i < meta.data.length; i++) {\n      var element = meta.data[i],\n        view = element._view, text;\n\n      if (!this.shouldRenderData(view)) {\n        continue;\n      }\n      switch (this.render) {\n        case 'value':\n          var value = dataset.data[i];\n          if (this.format) {\n            value = this.format(value);\n          }\n          text = value.toString();\n          break;\n        case 'label':\n          text = chartInstance.config.data.labels[i];\n          break;\n        case 'image':\n          text = this.images[i] ? this.loadImage(this.images[i]) : '';\n          break;\n        case 'percentage':\n        default:\n          percentage = this.getPercentage(view, dataset, i);\n          text = percentage + '%';\n          break;\n      }\n      if (typeof this.render === 'function') {\n        text = this.render({\n          label: chartInstance.config.data.labels[i],\n          value: dataset.data[i],\n          percentage: percentage,\n          dataset: dataset,\n          index: i\n        });\n\n        if (text === null || text === undefined) {\n          text = '';\n        } else if (typeof text === 'object') {\n          text = this.loadImage(text);\n        } else {\n          text = text.toString();\n        }\n      }\n      if (!text) {\n        continue;\n      }\n      ctx.save();\n      ctx.beginPath();\n      ctx.font = Chart.helpers.fontString(this.fontSize, this.fontStyle, this.fontFamily);\n      var position, innerRadius, arcOffset = 0;\n      if (this.position === 'outside' || this.position === 'border') {\n        innerRadius = view.outerRadius / 2;\n        var rangeFromCentre, offset = this.fontSize + this.textMargin,\n          centreAngle = view.startAngle + ((view.endAngle - view.startAngle) / 2);\n        if (this.position === 'border') {\n          rangeFromCentre = (view.outerRadius - innerRadius) / 2 + innerRadius;\n        } else if (this.position === 'outside') {\n          if (!this.arc) {\n            offset = this.textMargin;\n          }\n          rangeFromCentre = (view.outerRadius - innerRadius) + innerRadius + offset;\n        }\n        position = {\n          x: view.x + (Math.cos(centreAngle) * rangeFromCentre),\n          y: view.y + (Math.sin(centreAngle) * rangeFromCentre)\n        };\n        if (this.position === 'outside') {\n          if (!this.arc) {\n            offset += (this.measureText(text).width / 2);\n          }\n          if (position.x < view.x) {\n            position.x -= offset;\n          } else {\n            position.x += offset;\n          }\n          arcOffset = view.outerRadius + offset;\n        }\n      } else {\n        innerRadius = view.innerRadius;\n        position = element.tooltipPosition();\n      }\n\n      var fontColor = this.fontColor;\n      if (typeof fontColor === 'function') {\n        fontColor = fontColor({\n          label: chartInstance.config.data.labels[i],\n          value: dataset.data[i],\n          percentage: percentage,\n          text: text,\n          backgroundColor: dataset.backgroundColor[i],\n          dataset: dataset,\n          index: i\n        });\n      } else if (typeof fontColor !== 'string') {\n        fontColor = fontColor[i] || this.options.defaultFontColor;\n      }\n      if (this.arc) {\n        if (!arcOffset) {\n          arcOffset = (innerRadius + view.outerRadius) / 2;\n        }\n        ctx.fillStyle = fontColor;\n        ctx.textBaseline = 'middle';\n        this.drawArcText(text, arcOffset, view, this.overlap);\n      } else {\n        var drawable, mertrics = this.measureText(text),\n          left = position.x - mertrics.width / 2,\n          right = position.x + mertrics.width / 2,\n          top = position.y - mertrics.height / 2,\n          bottom = position.y + mertrics.height / 2;\n        if (this.overlap) {\n          drawable = true;\n        } else if (this.position === 'outside') {\n          drawable = this.checkTextBound(left, right, top, bottom);\n        } else {\n          drawable = element.inRange(left, top) && element.inRange(left, bottom) &&\n            element.inRange(right, top) && element.inRange(right, bottom);\n        }\n        if (drawable) {\n          this.fillText(text, position, fontColor);\n        }\n      }\n      ctx.restore();\n    }\n  };\n\n  PieceLabel.prototype.shouldRenderData = function (view) {\n    //Skips label creation if value is zero and showZero is set\n    return this.chartInstance.config.type === 'polarArea' ? view.outerRadius !== 0 : view.circumference !== 0 || this.showZero;\n  };\n\n  PieceLabel.prototype.getPercentage = function (view, dataset, index) {\n    var percentage;\n    if (this.chartInstance.config.type === 'polarArea') {\n      if (this.total === null) {\n        this.total = 0;\n        for (var i = 0;i < dataset.data.length; ++i) {\n          this.total += dataset.data[i];\n        }\n      }\n      percentage = dataset.data[index] / this.total * 100;\n    } else {\n      percentage = view.circumference / this.options.circumference * 100;\n    }\n    percentage = parseFloat(percentage.toFixed(this.precision));\n    if (!this.showActualPercentages) {\n      this.totalPercentage += percentage;\n      if (this.totalPercentage > 100) {\n        percentage -= this.totalPercentage - 100;\n        // After adjusting the percentage, need to trim the numbers after decimal points again, otherwise it may not show\n        // on chart due to very long number after decimal point.\n        percentage = parseFloat(percentage.toFixed(this.precision));\n      }\n    }\n    return percentage;\n  };\n\n  PieceLabel.prototype.parseOptions = function (chartInstance, index) {\n    var pieceLabel = chartInstance.options.pieceLabel;\n    if (Array.isArray(pieceLabel)) {\n      pieceLabel = pieceLabel[index];\n    }\n    this.chartInstance = chartInstance;\n    this.ctx = chartInstance.chart.ctx;\n    this.options = chartInstance.config.options;\n    this.render = pieceLabel.render || pieceLabel.mode;\n    this.position = pieceLabel.position || 'default';\n    this.arc = pieceLabel.arc;\n    this.format = pieceLabel.format;\n    this.precision = pieceLabel.precision || 0;\n    this.fontSize = pieceLabel.fontSize || this.options.defaultFontSize;\n    this.fontColor = pieceLabel.fontColor || this.options.defaultFontColor;\n    this.fontStyle = pieceLabel.fontStyle || this.options.defaultFontStyle;\n    this.fontFamily = pieceLabel.fontFamily || this.options.defaultFontFamily;\n    this.shadowOffsetX = pieceLabel.shadowOffsetX || 3;\n    this.shadowOffsetY = pieceLabel.shadowOffsetY || 3;\n    this.shadowColor = pieceLabel.shadowColor || 'rgba(0,0,0,0.3)';\n    this.shadowBlur = pieceLabel.shadowBlur || 6;\n    this.textShadow = pieceLabel.textShadow || false;\n    this.hasTooltip = chartInstance.tooltip._active && chartInstance.tooltip._active.length;\n    this.showZero = pieceLabel.showZero;\n    this.overlap = pieceLabel.overlap;\n    this.images = pieceLabel.images || [];\n    this.outsidePadding = pieceLabel.outsidePadding || 2;\n    this.textMargin = pieceLabel.textMargin || 2;\n    this.showActualPercentages = pieceLabel.showActualPercentages || false;\n  };\n\n  PieceLabel.prototype.checkTextBound = function (left, right, top, bottom) {\n    var labelBounds = this.labelBounds;\n    for (var i = 0;i < labelBounds.length;++i) {\n      var bound = labelBounds[i];\n      var potins = [\n        [left, top],\n        [left, bottom],\n        [right, top],\n        [right, bottom]\n      ];\n      for (var j = 0;j < potins.length;++j) {\n        var x = potins[j][0];\n        var y = potins[j][1];\n        if (x >= bound.left && x <= bound.right && y >= bound.top && y <= bound.bottom) {\n          return false;\n        }\n      }\n      potins = [\n        [bound.left, bound.top],\n        [bound.left, bound.bottom],\n        [bound.right, bound.top],\n        [bound.right, bound.bottom]\n      ];\n      for (var j = 0;j < potins.length;++j) {\n        var x = potins[j][0];\n        var y = potins[j][1];\n        if (x >= left && x <= right && y >= top && y <= bottom) {\n          return false;\n        }\n      }\n    }\n    labelBounds.push({\n      left: left,\n      right: right,\n      top: top,\n      bottom: bottom\n    });\n    return true;\n  };\n\n  PieceLabel.prototype.measureText = function (text) {\n    if (typeof text === 'object') {\n      return { width: text.width, height: text.height };\n    } else {\n      var width = 0;\n      var lines = text.split('\\n');\n      for (var i = 0; i < lines.length; ++i) {\n        var result = this.ctx.measureText(lines[i]);\n        if (result.width > width) {\n          width = result.width;\n        }\n      }\n      return { width: width, height: this.fontSize * lines.length };\n    }\n  };\n\n  PieceLabel.prototype.fillText = function (text, position, fontColor) {\n    var ctx = this.ctx;\n    if (typeof text === 'object') {\n      ctx.drawImage(text, position.x - text.width / 2, position.y - text.height / 2, text.width, text.height);\n    } else {\n      ctx.save();\n      ctx.fillStyle = fontColor;\n      ctx.textBaseline = 'top';\n      ctx.textAlign = 'center';\n\n      if (this.textShadow) {\n        ctx.shadowOffsetX = this.shadowOffsetX;\n        ctx.shadowOffsetY = this.shadowOffsetY;\n        ctx.shadowColor = this.shadowColor;\n        ctx.shadowBlur = this.shadowBlur;\n      }\n\n      var lines = text.split('\\n');\n      for (var i = 0; i < lines.length; i++) {\n        var y = position.y - this.fontSize / 2 * lines.length + this.fontSize * i;\n        ctx.fillText(lines[i], position.x, y);\n      }\n      ctx.restore();\n    }\n  };\n\n  PieceLabel.prototype.loadImage = function (obj) {\n    var image = new Image();\n    image.src = obj.src;\n    image.width = obj.width;\n    image.height = obj.height;\n    return image;\n  };\n\n  PieceLabel.prototype.drawArcText = function (str, radius, view, overlap) {\n    var ctx = this.ctx,\n      centerX = view.x,\n      centerY = view.y,\n      startAngle = view.startAngle,\n      endAngle = view.endAngle;\n\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.textAlign = 'left';\n    var angleSize = endAngle - startAngle;\n    startAngle += Math.PI / 2;\n    endAngle += Math.PI / 2;\n    var origStartAngle = startAngle;\n    var mertrics = this.measureText(str);\n    startAngle += (endAngle - (mertrics.width / radius + startAngle)) / 2;\n    if (!overlap && endAngle - startAngle > angleSize) {\n      ctx.restore();\n      return;\n    }\n\n    if (typeof str === 'string') {\n      ctx.rotate(startAngle);\n      var lines = str.split('\\n'), max = 0, widths = [], offset = 0;\n      if (this.position === 'border') {\n        offset = (lines.length - 1) * this.fontSize / 2;\n      }\n      for (var j = 0; j < lines.length; ++j) {\n        var mertrics = ctx.measureText(lines[j]);\n        if (mertrics.width > max) {\n          max = mertrics.width;\n        }\n        widths.push(mertrics.width);\n      }\n      for (var j = 0; j < lines.length; ++j) {\n        var line = lines[j];\n        var y = (lines.length - 1 - j) * -this.fontSize + offset;\n        ctx.save();\n        var padding = (max - widths[j]) / 2;\n        ctx.rotate(padding / radius);\n        for (var i = 0; i < line.length; i++) {\n          var char = line.charAt(i);\n          mertrics = ctx.measureText(char);\n          ctx.save();\n          ctx.translate(0, -1 * radius);\n          ctx.fillText(char, 0, y);\n          ctx.restore();\n          ctx.rotate(mertrics.width / radius);\n        }\n        ctx.restore();\n      }\n    } else {\n      ctx.rotate((origStartAngle + endAngle) / 2);\n      ctx.translate(0, -1 * radius);\n      this.fillText(str, { x: 0, y: 0 });\n    }\n    ctx.restore();\n  };\n\n  function init(chartInstance) {\n    if (chartInstance.options.pieceLabel) {\n      var count = 1;\n      if (Array.isArray(chartInstance.options.pieceLabel)) {\n        count = chartInstance.options.pieceLabel.length;\n      }\n      if (!chartInstance.pieceLabel || count !== chartInstance.pieceLabel.length) {\n        chartInstance.pieceLabel = [];\n        for (var i = 0; i < count; ++i) {\n          chartInstance.pieceLabel.push(new PieceLabel());\n        }\n      }\n    } else if (chartInstance.pieceLabel) {\n      delete chartInstance.pieceLabel;\n    }\n    return chartInstance.pieceLabel;\n  }\n\n  function execute(chartInstance, method) {\n    if (init(chartInstance)) {\n      for (var i = 0; i < chartInstance.pieceLabel.length; ++i) {\n        chartInstance.pieceLabel[i][method](chartInstance, i);\n      }\n    }\n  }\n\n  Chart.pluginService.register({\n    name: 'PieceLabel',\n    beforeDatasetsUpdate: function (chartInstance) {\n      execute(chartInstance, 'beforeDatasetsUpdate');\n    },\n    afterDatasetsDraw: function (chartInstance) {\n      execute(chartInstance, 'afterDatasetsDraw');\n    }\n  });\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}